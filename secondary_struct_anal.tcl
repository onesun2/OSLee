#!/usr/bin/tclsh
set file [open [lindex $argv 0] ]
set out [open dist5.dat w]
set out2 [open proportion5.dat w]
set numofPA 126
set numAA 8 ;# number of amino acids - 1
#This script is for the secondary strcuture analysis of ONE snapshot of pa simulation
#Raw data should be the secondary structure data generated by VMD Timeline
#One-Sun Lee, Northwestern University
# Definition of Matrix
# The first element of the matrix is residue number (for example, 0 to 12 for IKVAV)
# For the second element of the matrix
# 1: Sheet
# 2: Turn
# 3: Coil
# 4: Helix
#		<<Matrix Table>>
#		Sheet	Turn	Coil	Helix	etc
#A0		(0,1)	(0,2)	(0,3)	(0,4)	(0,5)
#A1		(1,1)	(1,2)	(1,3)	(1,4)	(1,5)
#A2		(2,1)	(2,2)	(2,3)	(2,4)	(2,5)
#A3		(3,1)	(3,2)	(3,3)	(3,4)	(3,5)
#A4		(4,1)	(4,2)	(4,3)	(4,4)	(4,5)
#A5		(5,1)	(2,2)	(2,3)	(2,4)	(2,5)
#A6		(6,1)	(6,2)	(6,3)	(6,4)	(6,5)
#A7		(7,1)	(7,2)	(7,3)	(7,4)	(7,5)
#A8		(8,1)	(8,2)	(8,3)	(8,4)	(8,5)
#A9		(9,1)	(9,2)	(9,3)	(9,4)	(9,5)
#A10		(10,1)	(10,2)	(10,3)	(10,4)	(10,5)
#A11		(11,1)	(11,2)	(11,3)	(11,4)	(11,5)
#A12		(12,1)	(12,2)	(12,3)	(12,4)	(12,5)

for {set i 0} {$i <= $numAA} {incr i} {
	for {set j 1} {$j <= 5} {incr j} {
		set m($i,$j) 0
	}
}
###############################################
######               MAIN                ######
###############################################
while {[gets $file line] >= 0} {

	set r [lindex $line 0]
	set ss [lindex $line 4]

	if {$ss == "E" || $ss == "B"} {
		set m($r,1) [expr $m($r,1)+1] 
	} elseif {$ss == "T"} {
		set m($r,2) [expr $m($r,2)+1]
	} elseif {$ss == "C"} {
		set m($r,3) [expr $m($r,3)+1]
	} elseif {$ss == "H" || $ss == "G" || $ss == "I"} {
		set m($r,4) [expr $m($r,4)+1]
	} else {
		set m($r,5) [expr $m($r,5)+1]
	} 
}
##################################################
######              END of MAIN             ######
##################################################

###################################
#     First Output  
####################################
for {set i 0} {$i <= $numAA} {incr i} {
	for {set j 1} {$j <= 5} {incr j} {
		puts $out "m($i,$j) = $m($i,$j) " nonewline
		if {$j%5 == 0} {puts $out ""}
	}
}
###################################
##   Second Output for Distribution of Secondary Structure of PA 
####################################
puts $out2 [format "# %11s %11s %11s %11s %11s" Sheet Turn Coil Helix Etc]
for {set i 0} {$i <= $numAA} {incr i} {
	puts $out2 "[format "%3d" [expr $i+1]]" nonewline
	for {set j 1} {$j <= 5} {incr j} {
		if {$j%5 == 1} {
#			puts $out2 [format "%s %10.3f  " Sheet [expr (100.0*$m($i,$j))/$numofPA] ] nonewline
			puts $out2 [format "%10.3f  "  [expr (100.0*$m($i,$j))/$numofPA] ] nonewline
		} elseif {$j%5 == 2} {
#			puts $out2 [format "%s %10.3f  " Turn  [expr (100.0*$m($i,$j))/$numofPA] ] nonewline
			puts $out2 [format "%10.3f  "  [expr (100.0*$m($i,$j))/$numofPA] ] nonewline
		} elseif {$j%5 == 3} {
#			puts $out2 [format "%s %10.3f  " COIL  [expr (100.0*$m($i,$j))/$numofPA] ] nonewline
			puts $out2 [format "%10.3f  "  [expr (100.0*$m($i,$j))/$numofPA] ] nonewline
		} elseif {$j%5 == 4} {
#			puts $out2 [format "%s %10.3f  " HELIX  [expr (100.0*$m($i,$j))/$numofPA] ] nonewline
			puts $out2 [format "%10.3f  "  [expr (100.0*$m($i,$j))/$numofPA] ] nonewline
		} elseif {$j%5 == 0} {
#			puts $out2 [format "%s %10.3f  " ETC  [expr (100.0*$m($i,$j))/$numofPA] ] nonewline
			puts $out2 [format "%10.3f  "  [expr (100.0*$m($i,$j))/$numofPA] ] nonewline
		}
		if {$j%5 == 0} {puts $out2 ""}
	}
}
close $out
close $out2
